# nginx configuration for hurl.lol
# This file routes requests to the Hurl application

# Upstream definitions for backend API
upstream hurl_backend {
    server localhost:8000;
    keepalive 32;
}

# Upstream definitions for frontend
upstream hurl_frontend {
    server localhost:3000;
    keepalive 32;
}

# HTTP server block for hurl.lol
server {
    listen 80;
    server_name hurl.lol www.hurl.lol;

    # Redirect www to non-www
    if ($host = www.hurl.lol) {
        return 301 $scheme://hurl.lol$request_uri;
    }

    # Client max body size
    client_max_body_size 10M;

    # Logging
    access_log /var/log/nginx/hurl.lol.access.log;
    error_log /var/log/nginx/hurl.lol.error.log;

    # Backend API endpoints - proxy to port 8000
    location /v1/ {
        proxy_pass http://hurl_backend;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Connection headers for keepalive
        proxy_set_header Connection "";

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # SSE streaming endpoint - needs special configuration
    location /v1/stream {
        proxy_pass http://hurl_backend;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # SSE specific settings
        proxy_set_header Connection '';
        proxy_buffering off;
        proxy_cache off;
        chunked_transfer_encoding on;

        # Longer timeouts for SSE
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # API docs and metrics endpoints
    location ~ ^/(docs|redoc|openapi.json|metrics)$ {
        proxy_pass http://hurl_backend;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Frontend - proxy everything else to Next.js on port 3000
    location / {
        proxy_pass http://hurl_frontend;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support for Next.js hot reload (dev mode)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Next.js specific paths
    location /_next/ {
        proxy_pass http://hurl_frontend;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Cache static assets
        add_header Cache-Control "public, max-age=31536000, immutable";
    }
}

# HTTPS server block for hurl.lol (uncomment after setting up SSL certificates)
# server {
#     listen 443 ssl http2;
#     server_name hurl.lol www.hurl.lol;
#
#     # SSL certificates (use certbot to generate)
#     ssl_certificate /etc/letsencrypt/live/hurl.lol/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/hurl.lol/privkey.pem;
#
#     # SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#
#     # Redirect www to non-www
#     if ($host = www.hurl.lol) {
#         return 301 https://hurl.lol$request_uri;
#     }
#
#     # Client max body size
#     client_max_body_size 10M;
#
#     # Logging
#     access_log /var/log/nginx/hurl.lol.access.log;
#     error_log /var/log/nginx/hurl.lol.error.log;
#
#     # Backend API endpoints - proxy to port 8000
#     location /v1/ {
#         proxy_pass http://hurl_backend;
#         proxy_http_version 1.1;
#
#         # Headers
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#
#         # Connection headers for keepalive
#         proxy_set_header Connection "";
#
#         # Timeouts
#         proxy_connect_timeout 60s;
#         proxy_send_timeout 60s;
#         proxy_read_timeout 60s;
#     }
#
#     # SSE streaming endpoint
#     location /v1/stream {
#         proxy_pass http://hurl_backend;
#         proxy_http_version 1.1;
#
#         # Headers
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#
#         # SSE specific settings
#         proxy_set_header Connection '';
#         proxy_buffering off;
#         proxy_cache off;
#         chunked_transfer_encoding on;
#
#         # Longer timeouts for SSE
#         proxy_connect_timeout 300s;
#         proxy_send_timeout 300s;
#         proxy_read_timeout 300s;
#     }
#
#     # API docs and metrics endpoints
#     location ~ ^/(docs|redoc|openapi.json|metrics)$ {
#         proxy_pass http://hurl_backend;
#         proxy_http_version 1.1;
#
#         # Headers
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
#
#     # Frontend - proxy everything else to Next.js on port 3000
#     location / {
#         proxy_pass http://hurl_frontend;
#         proxy_http_version 1.1;
#
#         # Headers
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#
#         # WebSocket support for Next.js hot reload (dev mode)
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#
#         # Timeouts
#         proxy_connect_timeout 60s;
#         proxy_send_timeout 60s;
#         proxy_read_timeout 60s;
#     }
#
#     # Next.js specific paths
#     location /_next/ {
#         proxy_pass http://hurl_frontend;
#         proxy_http_version 1.1;
#
#         # Headers
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#
#         # Cache static assets
#         add_header Cache-Control "public, max-age=31536000, immutable";
#     }
# }
